PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX cube: <https://cube.link/> 
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX schema: <http://schema.org/>
PREFIX ssz-dimension: <https://ld.stadt-zuerich.ch/statistics/property/>
PREFIX stardog: <tag:stardog:api:>

#
# This query generates the description & identifier for each cube
#

INSERT {
    ?cube schema:name ?finallabel ;
          schema:identifier ?identifier .
}
WHERE {
{
    {
        SELECT ?cube ?identifier ?measureId ?measureName (GROUP_CONCAT(?dimensionName ;separator=', ') AS ?text ) WHERE {
            SELECT ?cube ?identifier ?measureId ?measureName ?dimensionName WHERE {
                ?cube a cube:Cube ;
                    cube:observationConstraint ?constraint .

                ?constraint sh:property/sh:path ?dimension . 
    
                ?dimension schema:identifier ?dimensionId ;
                    schema:name ?dimensionName .
    
                FILTER ( ?dimension NOT IN (ssz-dimension:RAUM, ssz-dimension:ZEIT) )
                FILTER(CONTAINS(STR(?dimension), "property"))
    
                BIND( STRAFTER(STR(?cube), 'https://ld.stadt-zuerich.ch/statistics/') AS ?identifier )
                BIND( IF(STRLEN(?identifier) > 3, STRBEFORE(?identifier, '-'), ?identifier) AS ?measureId )

                ?measure a rdf:Property ;
                    schema:identifier ?measureId ;
                    schema:name ?measureName .
          
                FILTER(CONTAINS(STR(?measure), "measure"))
            } GROUP BY ?cube ?identifier ?measureId ?measureName ?dimensionId ?dimensionName ORDER BY ?cube ?dimensionId
        } GROUP BY ?cube ?identifier ?measureId ?measureName
    } 
    BIND(CONCAT( ?measureName, " nach ", ?text ) AS ?finallabel )
}
UNION
{
    # for the "raw" ones, with no additional dimensions
    ?cube a cube:Cube ;
        
    BIND( STRAFTER(STR(?cube), 'https://ld.stadt-zuerich.ch/statistics/') AS ?identifier )
    FILTER( !CONTAINS(?identifier, '-'))

    ?measure a rdf:Property ;
        schema:identifier ?identifier ;
        schema:name ?finallabel .
    FILTER(CONTAINS(STR(?measure), "measure"))
}
}